from phyre_engine.component import Component
import phyre_engine.tools.hhsuite
from tempfile import NamedTemporaryFile
import Bio.SeqIO

class HHBlits(Component):
    """Build an MSA from a query sequence using hhblits."""
    REQUIRED = ['sequence']
    ADDS     = ['profile_msa']
    REMOVES  = []

    def __init__(self, database, **args):
        """Create a new component for running hhblits.

        Args:
            ``database``: Path to an hhblits database.
            ``**args``: Extra arguments to pass to hhblits.

        See also:
            ``phyre_engine.tools.hhsuite.HHBlits``: Class responsible for
                actually running hhblits.
        """
        self._database = database
        self._args = args

    def run(self, data):
        """Build a sequence profile using hhblits.

        Reads a single sequence from the file with the path given by input.
        If the file can not be read or contains multiple sequences an exception
        will be thrown.

        Args:
            data: Key-value mapping of data. The following keys are required:
                `sequence`: Bio.SeqRecord object containing the query sequence.

        Returns:
            Key-value mapping of data with a `profile_msa` attribute added
            containing the file name of the MSA generated by hhblits.

        """

        #Write the query sequence to a temporary file and run hhblits
        sequence = self.get_vals(data)
        with NamedTemporaryFile(suffix=".fasta") as query_file:
            msa_name = "query.a3m"
            Bio.SeqIO.write(sequence, query_file.name, "fasta")
            hhblits = phyre_engine.tools.hhsuite.HHBlits(
                    database=self._database, input=query_file.name,
                    output="report.hhr", oa3m=msa_name,
                    **self._args)
            hhblits.run()
            data["profile_msa"] = msa_name
            return data

class HHSearch(Component):
    """Search a profile MSA against an hhsearch library."""
    REQUIRED = ['profile_msa']
    ADDS     = ['hhsearch_atab', 'hhsearch_report']
    REMOVES  = []

    def __init__(self, database, **args):
        """Create a new component for running hhsearch.

        Args:
            ``database``: Path to an hhsearch database.
            ``**args``: Extra arguments to pass to hhsearch.

        See also:
            ``phyre_engine.tools.hhsuite.HHSearch``: Class responsible for
                actually running hhsearch.
        """
        self._database = database
        self._args = args

    def run(self, data):
        """Search a sequence profile against an hhsearch database.

        This component will not parse the output files.

        Args:
            data: Key-value mapping of data. The following keys are required:
                `profile_atab`: File name of an MSA in a format understood by
                hhsearch.

        Returns:
            Key-value mapping of data. The following keys are added:
            `hhsearch_atab`: File name of a file containing all alignments in
                tabular format (from the `-atab` option of hhsearch).
            `hhseearch_report`: File name of the hhsearch report file (from the
                `-o` option of hhsearch).

        """

        profile_msa = self.get_vals(data)
        atab_name = "hhsearch.atab"
        report_name = "hhsearch.hhr"
        hhsearch = phyre_engine.tools.hhsuite.HHSearch(
                database=self._database, input=profile_msa,
                output=report_name, atab=atab_name,
                **self._args)
        hhsearch.run()
        data["hhsearch_atab"] = atab_name
        data["hhsearch_report"] = report_name
        return data
